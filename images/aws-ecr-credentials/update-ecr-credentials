#!/usr/bin/env sh
set -e

if [ -z "$AWS_ACCOUNT" ]; then
	echo "Missing environment variable AWS_ACCOUNT";
	exit 1
fi
if [ -z "$AWS_REGION" ]; then
	echo "Missing environment variable AWS_REGION";
	exit 1
fi
if [ -z "$AWS_ACCESS_KEY_ID" ]; then
	echo "Missing environment variable AWS_ACCESS_KEY_ID";
	exit 1
fi
if [ -z "$AWS_SECRET_ACCESS_KEY" ]; then
	echo "Missing environment variable AWS_SECRET_ACCESS_KEY";
	exit 1
fi
if [ -z "$SECRET_NAME" ]; then
	echo "Missing environment variable SECRET_NAME";
	exit 1
fi

echo "Retrieving Docker Credentials for the AWS ECR Registry ${AWS_ACCOUNT}"
DOCKER_REGISTRY_SERVER=https://${AWS_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com
DOCKER_USER=AWS
DOCKER_PASSWORD=`aws ecr get-login-password --region ${AWS_REGION}`

for namespace in ${NAMESPACES}
do
	echo
	echo "== namespace ${namespace} =="
	echo "Deleting secret ${SECRET_NAME}"
	kubectl --namespace=${namespace} delete secret ${SECRET_NAME} --ignore-not-found=true
	echo "Creating secret ${SECRET_NAME}"
	kubectl create secret docker-registry ${SECRET_NAME} \
		--docker-server=$DOCKER_REGISTRY_SERVER \
		--docker-username=$DOCKER_USER \
		--docker-password=$DOCKER_PASSWORD \
		--docker-email=no@email.local \
		--namespace=${namespace}
	if [ "$PATCH_SERVICEACCOUNT" = "true" ]; then
		current_secrets=$(kubectl get serviceaccounts default -o jsonpath='{.imagePullSecrets[*].name}')
		if [ -z "$current_secrets" ]; then
			# no imagePullSecret property is defined yet, we need to create it
			echo "Patching default serviceaccount to use imagePullSecret ${SECRET_NAME}"
			kubectl patch --namespace=${namespace} serviceaccount default -p '{"imagePullSecrets": [{"name":"'${SECRET_NAME}'"}]}'
		elif echo $current_secrets | grep -F -q -w "aws-ecr-credentials-aws-registry"; then
			echo "default serviceaccount already has imagePullSecret ${SECRET_NAME}"
		else
			# imagePullSecret property is defined and we need to append to the list
			echo "Patching default serviceaccount to use imagePullSecret ${SECRET_NAME}"
			kubectl patch --namespace=${namespace} serviceaccount default --type=json -p '[{"op": "add", "path": "/imagePullSecrets/-", "value": {"name":"'${SECRET_NAME}'"}}]'
		fi
	fi
done
