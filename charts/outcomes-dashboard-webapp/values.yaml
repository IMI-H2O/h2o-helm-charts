# Default values for outcomes-dashboard-webapp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  # -- docker image repository
  repository: quay.io/imi-h2o/outcomes-dashboard-webapp
  # -- image pull policy
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: dev

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  # -- Enable ingress controller resource
  enabled: true
  # -- Ingress class name
  className: ""
  # -- Annotations that define default ingress class, certificate issuer
  # @default -- check values.yaml
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
  # -- Path within the url structure
  path: "/h2o($|/)(.*)"
  pathType: ImplementationSpecific
  # -- Hosts to accept requests from
  hosts:
    - localhost
  tls:
    # -- TLS Secret Name
    secretName: radar-base-tls

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# -- Host name
serverName: localhost

managementPortal:
  # -- ManagementPortal URL
  url: http://localhost:8080/managementportal
  # -- ManagementPortal OAuth 2.0 client ID, having grant type authorization_code
  clientId: h2o_dashboard_webapp
  # -- ManagementPortal OAuth 2.0 client secret
  clientSecret: ""
